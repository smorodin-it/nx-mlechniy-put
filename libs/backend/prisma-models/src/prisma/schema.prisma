generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider          = "mysql"
    url               = env("DATABASE_URL")
    shadowDatabaseUrl = env("DATABASE_SHADOW_URL")
}

model User {
    id          Int               @id @default(autoincrement())
    uuid        String            @unique @default(uuid())
    email       String            @unique
    password    String
    role        Int               @default(3)
    createdAt   DateTime          @default(now())
    updatedAt   DateTime          @updatedAt
    Profile     Profile?
    Story       Story[]
    ContestRate ContestRate[]
    contests    UsersInContests[]
}

model Profile {
    id                     Int      @id @default(autoincrement())
    firstName              String
    lastName               String
    patronymic             String
    phone                  String
    age                    String
    postAddressAuthor      String
    eduOrganizationName    String
    eduOrganizationAddress String
    teacherFullName        String
    teacherPosition        String
    createdAt              DateTime @default(now())
    updatedAt              DateTime @updatedAt
    user                   User     @relation(fields: [userId], references: [id])
    userId                 Int      @unique
}

model Contest {
    id          Int               @id @default(autoincrement())
    uuid        String            @unique @default(uuid())
    title       String
    description String
    startDate   DateTime
    endDate     DateTime
    published   String
    users       UsersInContests[]
    createdAt   DateTime          @default(now())
    updatedAt   DateTime          @updatedAt
    Story       Story[]
}

model UsersInContests {
    User      User    @relation(fields: [userId], references: [id])
    userId    Int
    Contest   Contest @relation(fields: [contestId], references: [id])
    contestId Int

    @@id([userId, contestId])
}

model Story {
    id          Int           @id @default(autoincrement())
    uuid        String        @unique @default(uuid())
    title       String
    file        String        @unique
    author      User          @relation(fields: [userId], references: [id])
    userId      Int
    contest     Contest       @relation(fields: [contestId], references: [id])
    contestId   Int
    ContestRate ContestRate[]
}

model ContestRate {
    id          Int    @id @default(autoincrement())
    uuid        String @unique @default(uuid())
    rate        Int
    adjudicator User   @relation(fields: [userId], references: [id])
    userId      Int
    story       Story  @relation(fields: [storyId], references: [id])
    storyId     Int
}
